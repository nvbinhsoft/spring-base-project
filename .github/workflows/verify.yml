name: CI Pipeline

on:
  pull_request:
    branches: [ "main", "dev" ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Cache Maven Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build with Maven
        run: mvn clean package -DskipTests

#  code-quality:
#    name: Code Quality
#    needs: build
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout Code
#        uses: actions/checkout@v3
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          distribution: 'temurin'
#          java-version: 17
#
#      - name: Cache Maven Dependencies
#        uses: actions/cache@v3
#        with:
#          path: ~/.m2
#          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#          restore-keys: ${{ runner.os }}-m2
#
#      - name: Run Style Checks
#        run: mvn checkstyle:check -Dcheckstyle.failOnViolation=true -Dcheckstyle.failsOnError=true
#
#      - name: Run SpotBugs
#        run: mvn spotbugs:check -Dspotbugs.failOnError=true
#
#      - name: Generate Code Quality Reports
#        if: always()
#        run: |
#          mvn checkstyle:checkstyle
#          mvn spotbugs:spotbugs
#
#      - name: Upload Code Quality Reports
#        if: always()
#        uses: actions/upload-artifact@v4
#        with:
#          name: code-quality-reports
#          path: |
#            target/site/checkstyle.html
#            target/spotbugsXml.xml

  unit-tests:
    name: Run Unit Tests
    needs: build
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Cache Maven Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run Unit Tests with Reports
        run: mvn clean test surefire-report:report -P unit-tests

      - name: Upload Unit Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-reports
          path: |
            target/surefire-reports/*.xml
            target/site/surefire-report.html

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            target/surefire-reports/TEST-*.xml
          check_name: Unit Test Results

  integration-tests:
    name: Run Integration Tests
    needs: build
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Cache Maven Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run Integration Tests with Reports
        run: |
          mvn clean verify -P integration-tests
          mvn surefire-report:failsafe-report-only

      - name: Upload Integration Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-reports
          path: |
            target/failsafe-reports/*.xml
            target/site/failsafe-report.html

      - name: Publish Integration Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            target/failsafe-reports/TEST-*.xml
          check_name: Integration Test Results